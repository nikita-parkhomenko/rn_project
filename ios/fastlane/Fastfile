default_platform(:ios)

platform :ios do
  lane :checkcerts do
    # Create and unlock temporary keychain for match
    setup_ci(force: true)

    # Check certificate and provisioning profile are available and valid
    # If they are not then create them
    match(type: ENV["MATCH_TYPE"], app_identifier: ENV["BUNDLE_ID"], readonly: false)
  end
  lane :build do
    # Create and unlock temporary keychain for match
    setup_ci(force: true)

    # Get certificate and provisioning profile from git repo
    match(type: ENV["MATCH_TYPE"], app_identifier: ENV["BUNDLE_ID"], readonly: is_ci)

    # Generate badges for non-live releases
    if ENV["BADGE_PREFIX"]
      add_badge(shield: "#{ENV["BADGE_PREFIX"]}-#{ENV["BUILD_NUMBER"]}-blue", no_badge: true)
    end

    # Set build and environment specific values
    update_app_identifier(
      app_identifier: ENV["BUNDLE_ID"],
      plist_path: "./#{ENV["SCHEME_NAME"]}/Info.plist")

    update_info_plist(
      plist_path: "./#{ENV["SCHEME_NAME"]}/Info.plist",
      block: proc do |plist|
        plist['CFBundleName'] = ENV["APP_NAME"]
        plist['CFBundleDisplayName'] = ENV["APP_DISPLAY_NAME"]
      end
    )

    increment_build_number(build_number: ENV["BUILD_NUMBER"])

    increment_version_number(version_number: ENV["VERSION_NUMBER"])

    # Make provisioning profile related changes
    update_code_signing_settings(
      use_automatic_signing: false,
      team_id: ENV["FASTLANE_TEAM_ID"],
      code_sign_identity: (ENV["MATCH_TYPE"] == "development" ? "iPhone Developer" : "iPhone Distribution"),
      profile_uuid: ENV["sigh_#{ENV["BUNDLE_ID"]}_#{ENV["MATCH_TYPE"]}"],
    )

    # Build app
    sh("cd ../.. && npm i && cd ios/fastlane")
    cocoapods()
    build_app(
      scheme: ENV["SCHEME_NAME"],
      export_options: {
        method: ENV["MATCH_TYPE"]
      }
    )
  end
  lane :deploy do
    appcenter_upload(file: ENV["IPA_FILE_PATH"])
  end
end